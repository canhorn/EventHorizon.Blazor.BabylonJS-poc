@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<h1>Home Page</h1>

<AuthorizeView>
    <Authorized>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">
            Log out
        </button>
        <div><b>AccessToken:</b> @AccessToken</div>
        <h2>Claims</h2>
        @foreach (var claim in context.User.Claims)
        {
            <p>
                <b>Type:</b> @claim.Type =>
                <b>Value:</b> @claim.Value
            </p>
        }
    </Authorized>
    <NotAuthorized>
        <NavLink class="nav-link" href="authentication/login">
            <span class="oi oi-list-rich" aria-hidden="true"></span> Log in
        </NavLink>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject]
    public IAccessTokenProvider TokenProvider { get; set; }
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    public string AccessToken { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var accessTokenResult = await TokenProvider.RequestAccessToken();
        AccessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            AccessToken = token.Value;
        }
    }
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}