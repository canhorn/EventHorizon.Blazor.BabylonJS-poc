<div class="top-row navbar navbar-dark">
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
    <a class="navbar-brand @NavMenuCssClass" href="/">Game Editor</a>
</div>

<div class="blade @NavMenuCssClass" @onclick="ToggleNavMenu">
    <select @bind="@CurrentBlade">
        <option value="NAV_MENU">Nav</option>
        <option value="ENTITY_LIST">Entity List</option>
        <option value="EDITOR_FILE_EXPLORER">Filed Explorer</option>
    </select>

    @switch (CurrentBlade)
    {
        case "ENTITY_LIST":
            <ClientEntityListBlade />
            break;
        case "EDITOR_FILE_EXPLORER":
            <EditorFileExplorerBlade />
            break;
        default:
            <NavMenuBlade />
            break;
    }
</div>

@code {

    [Parameter]
    public EventCallback OnToggleExpand { get; set; }

    [Inject]
    public NavigationManager Navigation { get; set; }
    [Inject]
    public SignOutSessionStateManager SignOutManager { get; set; }

    public string CurrentBlade { get; set; } = "NAV_MENU";

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        OnToggleExpand.InvokeAsync();
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout?returnUrl=/");
    }
}
