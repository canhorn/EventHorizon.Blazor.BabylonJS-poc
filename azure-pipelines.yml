name: $(MajorVersion).$(MinorVersion)$(rev:.r)
pool:
  name: Default

trigger:
  branches:
    include:
      - master

pr:
  autoCancel: true
  branches:
    include: [ master ]

variables:
  BuildConfiguration: Release
  BuildPlatform: x64
  IsMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

resources:
  containers:
  - container: client_packages
    image: canhorn/ehz-client-packages:latest

jobs:
- job: Build_Base_Image
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable
  - task: Docker@2
    displayName: Build Restore Base Image 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-client-base
      arguments: --target dotnet-restore
      tags: $(Build.BuildNumber)


- job: Build_Client
  dependsOn:
  - Build_Base_Image
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable
  - task: Docker@2
    displayName: Run Build - EventHorizon.Blazor.BabylonJS 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-client-build
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-build-client
      tags: $(Build.BuildNumber)
  - task: Docker@2
    displayName: Run Publish - EventHorizon.Blazor.BabylonJS 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-client-publish
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-publish-client
      tags: $(Build.BuildNumber)
  - task: Docker@2
    displayName: Build Image - EventHorizon.Blazor.BabylonJS 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-client
      arguments: --build-arg Version=$(Build.BuildNumber) --target client-runtime
      tags: |
        latest
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Build Image - EventHorizon.Blazor.BabylonJS 
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-client
      tags: |
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Latest Image - EventHorizon.Blazor.BabylonJS 
    condition: and(succeeded(), eq(variables.IsMain, true))
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-client
      tags: |
        latest


- job: Build_Editor
  dependsOn:
  - Build_Base_Image
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable
  - task: Docker@2
    displayName: Run Build - EventHorizon.Game.Editor 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-editor-build
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-build-editor
      tags: $(Build.BuildNumber)
  - task: Docker@2
    displayName: Run Publish - EventHorizon.Game.Editor 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-editor-publish
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-publish-editor
      tags: $(Build.BuildNumber)
  - task: Docker@2
    displayName: Build Image - EventHorizon.Game.Editor 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-editor
      arguments: --build-arg Version=$(Build.BuildNumber) --target editor-runtime
      tags: |
        latest
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Build Image - EventHorizon.Game.Editor 
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-editor
      tags: |
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Latest Image - EventHorizon.Game.Editor 
    condition: and(succeeded(), eq(variables.IsMain, true))
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-platform-server-editor
      tags: |
        latest


- job: Build_Package
  dependsOn:
  - Build_Editor
  - Build_Client
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable
  - task: Docker@2
    displayName: Build Image - EventHorizon.Blazor.BabylonJS Packages 
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-client-packages
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-nuget-push
      tags: |
        latest
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Build Image - EventHorizon.Blazor.BabylonJS Packages 
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-client-packages
      tags: |
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Latest Image - EventHorizon.Blazor.BabylonJS Packages 
    condition: and(succeeded(), eq(variables.IsMain, true))
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)
      repository: canhorn/ehz-client-packages
      tags: |
        latest
  # Push NuGet Packages
  - script: docker run --rm --name push-packages canhorn/ehz-client-packages:$BUILD_NUMBER --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY
    displayName: NuGet Package Push - EventHorizon.Blazor.BabylonJS 
    env:
      NUGET_API_KEY: $(NUGET_API_KEY)
      BUILD_NUMBER: $(Build.BuildNumber)

      
- job: Automation
  dependsOn:
  - Build_Editor
  - Build_Client
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable
  - task: Docker@2
    displayName: Build Image - EventHorizon.Game.Editor.Automation
    inputs: 
      command: build
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation
      Dockerfile: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation/Dockerfile
      repository: canhorn/ehz-editor-automation
      arguments: --build-arg Version=$(Build.BuildNumber) --target dotnet-nuget-push
      tags: |
        latest
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Build Image - EventHorizon.Game.Editor.Automation 
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation
      Dockerfile: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation/Dockerfile
      repository: canhorn/ehz-editor-automation
      tags: |
        $(Build.BuildNumber)
  - task: Docker@2
    displayName: Push Latest Image - EventHorizon.Game.Editor.Automation 
    condition: and(succeeded(), eq(variables.IsMain, true))
    inputs: 
      command: push
      containerRegistry: docker-hub
      buildContext: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation
      Dockerfile: $(Build.SourcesDirectory)/Testing/EventHorizon.Game.Editor.Automation/Dockerfile
      repository: canhorn/ehz-editor-automation
      tags: |
        latest
