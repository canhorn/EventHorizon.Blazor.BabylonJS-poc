@using Microsoft.AspNetCore.Components.Authorization
@using EventHorizon.Game.Editor.Client.Shared.Toast
@using EventHorizon.Platform.LogProvider.Api
@using EventHorizon.ApplicationDetails.Component

<ApplicationDetailsProvider>
    <CascadingAuthenticationState>
        <AppCoreProviders>
            <Router AppAssembly="@typeof(Program).Assembly">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            @if (context.User?.Identity?.IsAuthenticated.IsNotTrue() ?? true)
                            {
                                <RedirectToLogin />
                            }
                            else
                            {
                                <h1>@Localizer["Not Authorized"]</h1>
                                <p>
                                    @Localizer["You are not authorized to access this resource."]
                                </p>
                            }
                        </NotAuthorized>
                    </AuthorizeRouteView>
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <h1>@Localizer["Page Not Found"]</h1>
                    </LayoutView>
                </NotFound>
            </Router>

            <MessageToastContainer />
        </AppCoreProviders>

        <AppEnrichment />
    </CascadingAuthenticationState>
</ApplicationDetailsProvider>

@code {
    [Inject]
    public IJSRuntime JSRuntime { get; set; } = null!;
    [Inject]
    public Localizer<SharedResource> Localizer { get; set; } = null!;
    [Inject]
    public LoggingHostedService LoggingHostedService { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        EventHorizon.Blazor.Interop.EventHorizonBlazorInterop.JSRuntime = JSRuntime;

        await LoggingHostedService.StartAsync();
    }
}
