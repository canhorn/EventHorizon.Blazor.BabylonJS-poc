@using EventHorizon.Game.Editor.Client.Wizard.Components.Provider

<button type="button" @onclick="HandleOpenWizardSelection">
    @if (IsOpen)
    {
        @Localizer["Close Wizards"]
    }
    else
    {
        @Localizer["Wizards"]
    }
</button>

<StandardWindow IsOpen="@(State.CurrentStep("blade") && IsOpen)" IsDraggable="true" WidthSize="medium">
    <Header>
        @State.CurrentStep("blade").Result?.Name
    </Header>

    <Body>
        @if (State.CurrentStep("blade"))
        {
            <WizardContextProvider Context="blade">
                <WizardStepEditor Step="@(State.CurrentStep("blade").Result)" Data="@(State.CurrentData("blade"))" />
            </WizardContextProvider>
        }
    </Body>
</StandardWindow>

<StandardModal IsOpen="@(!State.CurrentStep("blade") && IsOpen)" OnClose="HandleCloseModal">
    <Header>@Localizer["Wizard Editor"]</Header>

    <Body>
        <WizardContextProvider Context="blade">
            <WizardList />
        </WizardContextProvider>
    </Body>
</StandardModal>

@code {
    [CascadingParameter]
    public WizardState State { get; set; } = null!;

    [Inject]
    public Localizer<SharedResource> Localizer { get; set; } = null!;

    public bool IsOpen { get; set; }

    public void HandleOpenWizardSelection()
    {
        IsOpen = !IsOpen;
    }

    public void HandleCloseModal()
    {
        IsOpen = false;
    }
}
