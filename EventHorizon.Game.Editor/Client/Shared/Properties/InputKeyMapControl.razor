@using EventHorizon.Game.Client.Engine.Input.Model
@inherits InputKeyMapControlModel

<div>
    @if (ShowRemove)
    {
        <label class="--font-bold --cursor-pointer" title="@Localizer["Remove"]">
            <button class="c-button --text" type="button" @onclick="HandleRemove">
                &#10060
            </button>
            @LabelText
        </label>
    }
    else
    {
        <label class="--font-bold">
            @LabelText
        </label>
    }

    <div class="key-input__container">
        <EditForm EditContext="KeyInputContext" OnSubmit="() => HandleKeyInputSubmit()">
            @foreach (var (key, keyInput) in ControlInputConfig)
            {
                <div @key="key">
                    <div>
                        <label for="@($"keyInput-{keyInput.Key}-input")">
                            Input Key
                        </label>
                        <InputText name="@($"keyInput-{keyInput.Key}-input")" @bind-Value="keyInput.Key" disabled />
                    </div>
                    <div>
                        <label for="@($"keyInput-{keyInput.Key}-input")">
                            Select Input Action Type
                        </label>
                        <StandardSelect Options="InputActionTypeOptions" Value="@keyInput.OptionType"
                            ValueChanged="(selectedOption) => HandleKeyInputTypeChanged(keyInput, selectedOption)">
                        </StandardSelect>
                    </div>
                    @if (keyInput.Type == KeyInputType.PlayerMove)
                    {
                        <div>
                            <label>Move Direction on Pressed</label>
                            <InputSelect @bind-Value="keyInput.Pressed">
                                <option value="Stationary">Stationary</option>
                                <option value="Left">Left</option>
                                <option value="Right">Right</option>
                                <option value="Backwards">Backwards</option>
                                <option value="Forward">Forward</option>
                            </InputSelect>
                        </div>
                        <div>
                            <label>Move Direction on Released (@keyInput.Released)</label>
                            <InputSelect @bind-Value="keyInput.Released">
                                <option value="Stationary">Stationary</option>
                                <option value="Left">Left</option>
                                <option value="Right">Right</option>
                                <option value="Backwards">Backwards</option>
                                <option value="Forward">Forward</option>
                            </InputSelect>
                        </div>
                    }
                    else if (keyInput.Type == KeyInputType.SetActiveCamera)
                    {
                        <div>
                            (editing Action Settings)
                        </div>
                    }
                    else if (keyInput.Type == KeyInputType.RunInteraction)
                    {
                        <div>
                            (editing Menu Settings)
                        </div>
                    }
                    <div>
                        <button class="c-button" type="button" @onclick="() => HandleRemoveKeyInput(key)">
                            &#10060 @Localizer["Remove"]
                        </button>
                    </div>

                    <hr />
                    @* <DumpToJson Data="@keyInput" /> *@
                </div>
            }
        </EditForm>

        <div>
            <div>
                @ErrorMessage
            </div>
            <input type="text" @bind="NewKeyInput" />
            <button type="button" @onclick="HandleAddNewInput">
                @Localizer["Add"]
            </button>
        </div>
    </div>

</div>
