@using EventHorizon.Game.Client.Engine.Input.Model
@inherits InputKeyMapControlModel

<div>
    @if (ShowRemove)
    {
        <label class="--font-bold --cursor-pointer" title="@Localizer["Remove"]">
            <button class="c-button --text" type="button" @onclick="HandleRemove">
                &#10060
            </button>
            @LabelText
        </label>
    }
    else
    {
        <label class="--font-bold">
            @LabelText
        </label>
    }

    <div>
        <div>
            @Message
        </div>
        <EditForm Model="this" OnSubmit="HandleAddNewInput">
            <div class="new-key-input__container">
                <FluentTextField @bind-Value="NewKeyInput" Placeholder="@Localizer["Enter new key"]" />

                <FluentButton Type="ButtonType.Submit">
                    @Localizer["New Key Input"]
                </FluentButton>
            </div>
        </EditForm>
    </div>

    <div class="key-input__container">
        <EditForm Model="ControlInputConfig">
            @foreach (var (key, keyInput) in ControlInputConfig)
            {
                <div @key="key">
                    <div>
                        <label for="@($"keyInput-{keyInput.Key}-input")">
                            @Localizer["Input Key"]
                        </label>
                        <InputText name="@($"keyInput-{keyInput.Key}-input")" @bind-Value="keyInput.Key" disabled />
                    </div>
                    <div>
                        <label for="@($"keyInput-{keyInput.Key}-input")">
                            @Localizer["Select Input Action Type"]
                        </label>
                        <StandardSelect Name="@($"keyInput-{keyInput.Key}-input")" Options="InputActionTypeOptions"
                            Value="@keyInput.TypeOption"
                            ValueChanged="(selectedOption) => HandleKeyInputTypeChanged(keyInput, selectedOption)">
                        </StandardSelect>
                    </div>
                    @if (keyInput.Type == KeyInputType.PlayerMove)
                    {
                        <div>
                            <label for="@($"keyInput-{keyInput.Key}-direction-pressed")">
                                @Localizer["Move Direction on Pressed"]
                            </label>
                            <StandardSelect Name="@($"keyInput-{keyInput.Key}-direction-pressed")" Options="DirectionOptions"
                                Value="@keyInput.PressedOption"
                                ValueChanged="(pressedOption) => HandlePlayerMovePressedChanged(keyInput, pressedOption)" />
                        </div>
                        <div>
                            <label for="@($"keyInput-{keyInput.Key}-direction-released")">
                                @Localizer["Move Direction on Released"]
                            </label>
                            <StandardSelect Name="@($"keyInput-{keyInput.Key}-direction-released")" Options="DirectionOptions"
                                Value="@keyInput.ReleasedOption"
                                ValueChanged="(releasedOption) => HandlePlayerMoveReleasedChanged(keyInput, releasedOption)">
                            </StandardSelect>
                        </div>
                    }
                    else if (keyInput.Type == KeyInputType.SetActiveCamera)
                    {
                        <div>
                            <label for="@($"keyInput-{keyInput.Key}-camera")">
                                @Localizer["Activated Camera"]
                            </label>
                            <StandardSelect Name="@($"keyInput-{keyInput.Key}-camera")" Options="CameraTypeOptions"
                                Value="@keyInput.CameraOption"
                                ValueChanged="(cameraSelectedOption) => HandleCameraTypeChanged(keyInput, cameraSelectedOption)">
                            </StandardSelect>
                        </div>
                    }
                    else if (keyInput.Type == KeyInputType.RunInteraction)
                    {
                        <div>
                            @* (editing Menu Settings) *@
                        </div>
                    }
                    <div class="key-input__actions">
                        <FluentButton OnClick="() => HandleRemoveKeyInput(key)">
                            &#10060 @Localizer["Remove"]
                        </FluentButton>
                    </div>

                    <hr />
                </div>
            }
        </EditForm>

    </div>

</div>
